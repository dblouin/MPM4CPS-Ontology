<?xml version="1.0"?>
<Ontology xmlns="http://www.w3.org/2002/07/owl#"
     xml:base="http://mpm4cps.eu/ontology/mpm"
     xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
     xmlns:xml="http://www.w3.org/XML/1998/namespace"
     xmlns:xsd="http://www.w3.org/2001/XMLSchema#"
     xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
     ontologyIRI="http://mpm4cps.eu/ontology/mpm">
    <Prefix name="" IRI="http://mpm4cps.eu/ontology/mpm"/>
    <Prefix name="owl" IRI="http://www.w3.org/2002/07/owl#"/>
    <Prefix name="rdf" IRI="http://www.w3.org/1999/02/22-rdf-syntax-ns#"/>
    <Prefix name="xml" IRI="http://www.w3.org/XML/1998/namespace"/>
    <Prefix name="xsd" IRI="http://www.w3.org/2001/XMLSchema#"/>
    <Prefix name="rdfs" IRI="http://www.w3.org/2000/01/rdf-schema#"/>
    <Import>http://mpm4cps.eu/ontology/shared</Import>
    <Annotation>
        <AnnotationProperty IRI="http://mpm4cps.eu/ontology/shared#mpm4cps:author"/>
        <Literal>Dominique Blouin; Hana Mkaouar</Literal>
    </Annotation>
    <Annotation>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <Literal>This ontology captures the Multi-Paradigm Modeling Domain (MPM). It includes concepts for the related modeling, linguistic and formal sub domains.</Literal>
    </Annotation>
    <Declaration>
        <Class IRI="#AbstractSyntax"/>
    </Declaration>
    <Declaration>
        <Class IRI="#AnalysisTool"/>
    </Declaration>
    <Declaration>
        <Class IRI="#ApplicationMegaModel"/>
    </Declaration>
    <Declaration>
        <Class IRI="#ArchitectureDescriptionLanguage"/>
    </Declaration>
    <Declaration>
        <Class IRI="#AutomataBasedFormalism"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Behavioral"/>
    </Declaration>
    <Declaration>
        <Class IRI="#BehavioralCharacteristic"/>
    </Declaration>
    <Declaration>
        <Class IRI="#CapturingOperation"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Communication"/>
    </Declaration>
    <Declaration>
        <Class IRI="#ConcreteSyntax"/>
    </Declaration>
    <Declaration>
        <Class IRI="#ConfigurationMegaModel"/>
    </Declaration>
    <Declaration>
        <Class IRI="#ConformanceRelation"/>
    </Declaration>
    <Declaration>
        <Class IRI="#ContinuousCharacteristic"/>
    </Declaration>
    <Declaration>
        <Class IRI="#DiscreteCharacteristic"/>
    </Declaration>
    <Declaration>
        <Class IRI="#DomainSpecificLanguage"/>
    </Declaration>
    <Declaration>
        <Class IRI="#ExecutionTool"/>
    </Declaration>
    <Declaration>
        <Class IRI="#FlowBasedFormalism"/>
    </Declaration>
    <Declaration>
        <Class IRI="#FormalLanguage"/>
    </Declaration>
    <Declaration>
        <Class IRI="#FormalSemantics"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Formalism"/>
    </Declaration>
    <Declaration>
        <Class IRI="#FormalismCharacteristic"/>
    </Declaration>
    <Declaration>
        <Class IRI="#FormalismDC"/>
    </Declaration>
    <Declaration>
        <Class IRI="#FormalismFamily"/>
    </Declaration>
    <Declaration>
        <Class IRI="#GraphicalSyntax"/>
    </Declaration>
    <Declaration>
        <Class IRI="#HybridAutomataBasedFormalism"/>
    </Declaration>
    <Declaration>
        <Class IRI="#LogicBasedFormalism"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Megamodel"/>
    </Declaration>
    <Declaration>
        <Class IRI="#MegamodelFragment"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Metamodel"/>
    </Declaration>
    <Declaration>
        <Class IRI="#MicroModelElement"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Micromodel"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Model"/>
    </Declaration>
    <Declaration>
        <Class IRI="#ModelRelation"/>
    </Declaration>
    <Declaration>
        <Class IRI="#ModelingDC"/>
    </Declaration>
    <Declaration>
        <Class IRI="#ModelingLanguage"/>
    </Declaration>
    <Declaration>
        <Class IRI="#ModelingParadigm"/>
    </Declaration>
    <Declaration>
        <Class IRI="#ModelingTool"/>
    </Declaration>
    <Declaration>
        <Class IRI="#PetriNetBasedFormalism"/>
    </Declaration>
    <Declaration>
        <Class IRI="#ProgrammingLanguage"/>
    </Declaration>
    <Declaration>
        <Class IRI="#RefinementRelation"/>
    </Declaration>
    <Declaration>
        <Class IRI="#RuntimeTool"/>
    </Declaration>
    <Declaration>
        <Class IRI="#SemanticDomain"/>
    </Declaration>
    <Declaration>
        <Class IRI="#SemanticMappingRelation"/>
    </Declaration>
    <Declaration>
        <Class IRI="#SimulationTool"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Structural"/>
    </Declaration>
    <Declaration>
        <Class IRI="#StructuralConstraintLanguage"/>
    </Declaration>
    <Declaration>
        <Class IRI="#StructureCharacteristic"/>
    </Declaration>
    <Declaration>
        <Class IRI="#SynchronizationRelation"/>
    </Declaration>
    <Declaration>
        <Class IRI="#SyntaxMappingRelation"/>
    </Declaration>
    <Declaration>
        <Class IRI="#TextualSyntax"/>
    </Declaration>
    <Declaration>
        <Class IRI="#TimedAutomataBasedFormalism"/>
    </Declaration>
    <Declaration>
        <Class IRI="#TimedCharacteristic"/>
    </Declaration>
    <Declaration>
        <Class IRI="#TraceabilityModel"/>
    </Declaration>
    <Declaration>
        <Class IRI="#TraceabilityRelation"/>
    </Declaration>
    <Declaration>
        <Class IRI="#TransformationLanguage"/>
    </Declaration>
    <Declaration>
        <Class IRI="#TransformationRelation"/>
    </Declaration>
    <Declaration>
        <Class IRI="#TransformationTool"/>
    </Declaration>
    <Declaration>
        <Class IRI="#TranslationalSemantics"/>
    </Declaration>
    <Declaration>
        <Class IRI="#UncertaintyCharacteristic"/>
    </Declaration>
    <Declaration>
        <Class IRI="#VisualizationTool"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#hasAbstractSyntax"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#hasAbstractSyntaxSem"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#hasCharacteristic"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#hasChildFormalism"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#hasChildLanguage"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#hasConcreteSyntax"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#hasConnectedModel"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#hasContext"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#hasContextRelation"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#hasInput"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#hasInputModel"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#hasLanguage"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#hasMegamodelFragment"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#hasModel"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#hasModelConstraint"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#hasModelElement"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#hasModelOperation"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#hasModelRelation"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#hasOutput"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#hasOutputModel"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#hasSemanticDomain"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#hasSpecification"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#hasSubFormalismFamily"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#hasSyntaxMapping"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#hasTool"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#hasTraceabilityRelation"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#hasTranformationSpecification"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#isAppliedToModel"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#isBasedOnFormalism"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#isConformingTo"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#isConnecting"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#isExtending"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#isExtendingFormalism"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#isPerformedBy"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#isReturningTo"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#isSpecializing"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#isToolFor"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#AutomatonLikeFamily"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#FlowFormalismsFamily"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#HybridAutomatonLike"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#TimedAutomatonLike"/>
    </Declaration>
    <EquivalentClasses>
        <Class IRI="#Megamodel"/>
        <ObjectIntersectionOf>
            <Class IRI="#Model"/>
            <ObjectSomeValuesFrom>
                <ObjectProperty IRI="#hasModel"/>
                <ObjectIntersectionOf>
                    <Class IRI="#Model"/>
                    <ObjectComplementOf>
                        <Class IRI="#MicroModelElement"/>
                    </ObjectComplementOf>
                </ObjectIntersectionOf>
            </ObjectSomeValuesFrom>
        </ObjectIntersectionOf>
    </EquivalentClasses>
    <SubClassOf>
        <Class IRI="#AbstractSyntax"/>
        <Class IRI="#Model"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#AbstractSyntax"/>
        <Class IRI="http://mpm4cps.eu/ontology/shared#Syntax"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#AnalysisTool"/>
        <Class IRI="#ModelingTool"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ApplicationMegaModel"/>
        <Class IRI="#Megamodel"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ArchitectureDescriptionLanguage"/>
        <Class IRI="#ModelingLanguage"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#AutomataBasedFormalism"/>
        <Class IRI="#Formalism"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Behavioral"/>
        <Class IRI="#ArchitectureDescriptionLanguage"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#BehavioralCharacteristic"/>
        <Class IRI="#FormalismCharacteristic"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#CapturingOperation"/>
        <Class IRI="#TransformationLanguage"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Communication"/>
        <Class IRI="#ArchitectureDescriptionLanguage"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ConcreteSyntax"/>
        <Class IRI="#Model"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ConcreteSyntax"/>
        <Class IRI="http://mpm4cps.eu/ontology/shared#Syntax"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ConfigurationMegaModel"/>
        <Class IRI="#Megamodel"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ConformanceRelation"/>
        <Class IRI="#ModelRelation"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ContinuousCharacteristic"/>
        <Class IRI="#BehavioralCharacteristic"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#DiscreteCharacteristic"/>
        <Class IRI="#BehavioralCharacteristic"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#DomainSpecificLanguage"/>
        <Class IRI="#ModelingLanguage"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ExecutionTool"/>
        <Class IRI="#ModelingTool"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#FlowBasedFormalism"/>
        <Class IRI="#Formalism"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#FormalLanguage"/>
        <Class IRI="#ModelingLanguage"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#FormalSemantics"/>
        <Class IRI="http://mpm4cps.eu/ontology/shared#Semantics"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Formalism"/>
        <Class IRI="#FormalismDC"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Formalism"/>
        <Class IRI="#Model"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#FormalismCharacteristic"/>
        <Class IRI="#FormalismDC"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#FormalismDC"/>
        <Class IRI="#ModelingDC"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#FormalismFamily"/>
        <Class IRI="#FormalismDC"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#GraphicalSyntax"/>
        <Class IRI="#ConcreteSyntax"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#HybridAutomataBasedFormalism"/>
        <Class IRI="#AutomataBasedFormalism"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#LogicBasedFormalism"/>
        <Class IRI="#Formalism"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#MegamodelFragment"/>
        <Class IRI="#Model"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Metamodel"/>
        <Class IRI="#Model"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#MicroModelElement"/>
        <Class IRI="#Model"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Micromodel"/>
        <Class IRI="#Model"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Micromodel"/>
        <ObjectAllValuesFrom>
            <ObjectProperty IRI="#hasModel"/>
            <Class IRI="#MicroModelElement"/>
        </ObjectAllValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Model"/>
        <Class IRI="#ModelingDC"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ModelRelation"/>
        <Class IRI="#ModelingDC"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ModelRelation"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#hasConnectedModel"/>
            <Class IRI="#Model"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ModelingDC"/>
        <Class IRI="http://mpm4cps.eu/ontology/shared#DomainConcept"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ModelingLanguage"/>
        <Class IRI="#Model"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ModelingLanguage"/>
        <Class IRI="http://mpm4cps.eu/ontology/shared#Language"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ModelingParadigm"/>
        <Class IRI="#ModelingDC"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ModelingTool"/>
        <Class IRI="#Model"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ModelingTool"/>
        <Class IRI="http://mpm4cps.eu/ontology/shared#Tool"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#PetriNetBasedFormalism"/>
        <Class IRI="#Formalism"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ProgrammingLanguage"/>
        <Class IRI="#ModelingLanguage"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#RefinementRelation"/>
        <Class IRI="#TransformationRelation"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#RuntimeTool"/>
        <Class IRI="#ModelingTool"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#SemanticDomain"/>
        <Class IRI="#Model"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#SemanticMappingRelation"/>
        <Class IRI="#ModelRelation"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#SimulationTool"/>
        <Class IRI="#ModelingTool"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Structural"/>
        <Class IRI="#ArchitectureDescriptionLanguage"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#StructuralConstraintLanguage"/>
        <Class IRI="#ModelingLanguage"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#StructureCharacteristic"/>
        <Class IRI="#FormalismCharacteristic"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#SynchronizationRelation"/>
        <Class IRI="#TransformationRelation"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#SyntaxMappingRelation"/>
        <Class IRI="#ModelRelation"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#TextualSyntax"/>
        <Class IRI="#ConcreteSyntax"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#TimedAutomataBasedFormalism"/>
        <Class IRI="#HybridAutomataBasedFormalism"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#TimedCharacteristic"/>
        <Class IRI="#BehavioralCharacteristic"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#TraceabilityModel"/>
        <Class IRI="#Micromodel"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#TraceabilityRelation"/>
        <Class IRI="#ModelRelation"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#TransformationLanguage"/>
        <Class IRI="#ModelingLanguage"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#TransformationRelation"/>
        <Class IRI="#ModelRelation"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#TransformationTool"/>
        <Class IRI="#ModelingTool"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#TranslationalSemantics"/>
        <Class IRI="http://mpm4cps.eu/ontology/shared#Semantics"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#UncertaintyCharacteristic"/>
        <Class IRI="#BehavioralCharacteristic"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#VisualizationTool"/>
        <Class IRI="#ModelingTool"/>
    </SubClassOf>
    <DisjointClasses>
        <Class IRI="#ApplicationMegaModel"/>
        <Class IRI="#ConfigurationMegaModel"/>
    </DisjointClasses>
    <ClassAssertion>
        <Class IRI="#FormalismFamily"/>
        <NamedIndividual IRI="#AutomatonLikeFamily"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#FormalismFamily"/>
        <NamedIndividual IRI="#FlowFormalismsFamily"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#FormalismFamily"/>
        <NamedIndividual IRI="#HybridAutomatonLike"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#FormalismFamily"/>
        <NamedIndividual IRI="#TimedAutomatonLike"/>
    </ClassAssertion>
    <SubObjectPropertyOf>
        <ObjectProperty IRI="#hasChildFormalism"/>
        <ObjectProperty abbreviatedIRI="owl:topObjectProperty"/>
    </SubObjectPropertyOf>
    <SubObjectPropertyOf>
        <ObjectProperty IRI="#hasInput"/>
        <ObjectProperty IRI="#isConnecting"/>
    </SubObjectPropertyOf>
    <SubObjectPropertyOf>
        <ObjectProperty IRI="#hasMegamodelFragment"/>
        <ObjectProperty IRI="#hasModel"/>
    </SubObjectPropertyOf>
    <SubObjectPropertyOf>
        <ObjectProperty IRI="#hasModelOperation"/>
        <ObjectProperty IRI="#hasModelRelation"/>
    </SubObjectPropertyOf>
    <SubObjectPropertyOf>
        <ObjectProperty IRI="#hasOutput"/>
        <ObjectProperty IRI="#isConnecting"/>
    </SubObjectPropertyOf>
    <SubObjectPropertyOf>
        <ObjectProperty IRI="#hasSubFormalismFamily"/>
        <ObjectProperty abbreviatedIRI="owl:topObjectProperty"/>
    </SubObjectPropertyOf>
    <InverseObjectProperties>
        <ObjectProperty IRI="#hasConnectedModel"/>
        <ObjectProperty IRI="#hasModelRelation"/>
    </InverseObjectProperties>
    <InverseObjectProperties>
        <ObjectProperty IRI="#hasInputModel"/>
        <ObjectProperty IRI="#hasModelRelation"/>
    </InverseObjectProperties>
    <InverseObjectProperties>
        <ObjectProperty IRI="#hasLanguage"/>
        <ObjectProperty IRI="#isBasedOnFormalism"/>
    </InverseObjectProperties>
    <InverseObjectProperties>
        <ObjectProperty IRI="#hasModelRelation"/>
        <ObjectProperty IRI="#hasOutputModel"/>
    </InverseObjectProperties>
    <InverseObjectProperties>
        <ObjectProperty IRI="#hasTool"/>
        <ObjectProperty IRI="#isToolFor"/>
    </InverseObjectProperties>
    <TransitiveObjectProperty>
        <ObjectProperty IRI="#hasChildFormalism"/>
    </TransitiveObjectProperty>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#hasAbstractSyntax"/>
        <Class IRI="#SyntaxMappingRelation"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#hasAbstractSyntaxSem"/>
        <Class IRI="#SemanticMappingRelation"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#hasCharacteristic"/>
        <Class IRI="#Formalism"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#hasChildFormalism"/>
        <Class IRI="#FormalismFamily"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#hasConcreteSyntax"/>
        <Class IRI="#SyntaxMappingRelation"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#hasConnectedModel"/>
        <Class IRI="#ModelRelation"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#hasContextRelation"/>
        <Class IRI="#ModelRelation"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#hasInputModel"/>
        <Class IRI="#ModelRelation"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#hasLanguage"/>
        <Class IRI="#Formalism"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#hasLanguage"/>
        <Class IRI="#ModelingTool"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#hasMegamodelFragment"/>
        <Class IRI="#Megamodel"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#hasModel"/>
        <Class IRI="#Model"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#hasModelElement"/>
        <Class IRI="#Micromodel"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#hasModelOperation"/>
        <Class IRI="#Model"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#hasModelRelation"/>
        <Class IRI="#Model"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#hasOutputModel"/>
        <Class IRI="#ModelRelation"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#hasSemanticDomain"/>
        <Class IRI="#SemanticMappingRelation"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#hasSpecification"/>
        <Class IRI="#TransformationRelation"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#hasSubFormalismFamily"/>
        <Class IRI="#FormalismFamily"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#hasTraceabilityRelation"/>
        <Class IRI="#TraceabilityModel"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#hasTranformationSpecification"/>
        <Class IRI="#ModelingTool"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#isConformingTo"/>
        <Class IRI="#Micromodel"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#isExtendingFormalism"/>
        <Class IRI="#Formalism"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#isSpecializing"/>
        <Class IRI="#Formalism"/>
    </ObjectPropertyDomain>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#hasCharacteristic"/>
        <Class IRI="#FormalismCharacteristic"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#hasChildFormalism"/>
        <Class IRI="#Formalism"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#hasConnectedModel"/>
        <Class IRI="#Model"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#hasContextRelation"/>
        <Class IRI="#ModelRelation"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#hasInput"/>
        <Class IRI="#Model"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#hasInputModel"/>
        <Class IRI="#Model"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#hasMegamodelFragment"/>
        <Class IRI="#MegamodelFragment"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#hasModel"/>
        <ObjectAllValuesFrom>
            <ObjectProperty IRI="#hasModel"/>
            <Class IRI="#Model"/>
        </ObjectAllValuesFrom>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#hasModelElement"/>
        <Class IRI="#MicroModelElement"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#hasModelRelation"/>
        <Class IRI="#ModelRelation"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#hasOutput"/>
        <Class IRI="#Model"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#hasOutputModel"/>
        <Class IRI="#Model"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#hasSemanticDomain"/>
        <Class IRI="#SemanticDomain"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#hasSpecification"/>
        <Class IRI="#Micromodel"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#hasSubFormalismFamily"/>
        <Class IRI="#FormalismFamily"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#hasSyntaxMapping"/>
        <Class IRI="#SyntaxMappingRelation"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#hasTraceabilityRelation"/>
        <Class IRI="#TraceabilityRelation"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#hasTranformationSpecification"/>
        <Class IRI="#TransformationRelation"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#isAppliedToModel"/>
        <Class IRI="#Model"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#isBasedOnFormalism"/>
        <Class IRI="#Formalism"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#isConformingTo"/>
        <Class IRI="#ConformanceRelation"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#isConnecting"/>
        <Class IRI="#Model"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#isExtendingFormalism"/>
        <Class IRI="#Formalism"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#isSpecializing"/>
        <Class IRI="#Formalism"/>
    </ObjectPropertyRange>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#AbstractSyntax</IRI>
        <Literal>An abstract syntax is a syntax that only captures the essence of a language (its concepts and the relations between them) independently from the notation users will employ to manipulate models of the language. An abstract syntax is equivalent to the Abstract Syntax Trees (ASTs) into which code of programming languages are transformed during compilation</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#AnalysisTool</IRI>
        <Literal>Tools to analysis systems e.g. performance, resourceConsumption, schedulability ....</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="http://mpm4cps.eu/ontology/shared#mpm4cps:website"/>
        <IRI>#ApplicationMegaModel</IRI>
        <Literal>https://publishup.uni-potsdam.de/opus4-ubp/frontdoor/index/index/docId/6234</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#ApplicationMegaModel</IRI>
        <Literal>A representation of the real models in the CPS development environment.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#AutomataBasedFormalism</IRI>
        <Literal>The class of formalisms that are based on automata</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#AutomataBasedFormalism</IRI>
        <Literal>Automata-based Formalisms</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#ConcreteSyntax</IRI>
        <Literal>A concrete syntax is the syntax users of the language manipulate to build models of the language. A modeling language may have several concrete syntaxes such as textual and graphical ones to improve its usability.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="http://mpm4cps.eu/ontology/shared#mpm4cps:website"/>
        <IRI>#ConfigurationMegaModel</IRI>
        <Literal>https://publishup.uni-potsdam.de/opus4-ubp/frontdoor/index/index/docId/6234</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#ConfigurationMegaModel</IRI>
        <Literal>Declares types for the models and relations contained in application megamodel. (language and relation types)</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#ConformanceRelation</IRI>
        <Literal>A ConformanceRelation is a subclass of the ModelRelation to relate  a Metamodel with its conforming MicroModel(s).</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#ExecutionTool</IRI>
        <Literal>Execution Tool</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#FlowBasedFormalism</IRI>
        <Literal>Flow-based Formalisms</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="http://mpm4cps.eu/ontology/shared#mpm4cps:toBeUpdated"/>
        <IRI>#Formalism</IRI>
        <Literal>To be reformulated as this is the same text as Bronan</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="http://mpm4cps.eu/ontology/shared#mpm4cps:website"/>
        <IRI>#Formalism</IRI>
        <Literal>https://en.wikipedia.org/wiki/Formalism_(philosophy_of_mathematics)</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Formalism</IRI>
        <Literal>Formalisms are mathematical objects consisting of an abstract
syntax and a formal semantics. Languages are concrete
implementations of formalisms. A language has a concrete
syntax, may deviate slightly from the formalism in the
semantics that it implements, or may implement multiple
semantics (e.g., changing the type of numerical solver in a
simulation tool may change the behavior of a model). Also, a
language may implement more than one formalisms.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:seeAlso"/>
        <IRI>#Formalism</IRI>
        <Literal>key:Broman2012</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#FormalismDC</IRI>
        <Literal>This class groups classes related to formalisms</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="http://mpm4cps.eu/ontology/shared#mpm4cps:toBeReviewed"/>
        <IRI>#FormalismFamily</IRI>
        <Literal>We are not sur about this classification.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#GraphicalSyntax</IRI>
        <Literal>Graphical syntax display sentences of the language as visual elements such as boxes and arrows.
However pure graphical syntax are not common and often include textual parts.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#HybridAutomataBasedFormalism</IRI>
        <Literal>Hybrid Automata-based Formalisms</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#LogicBasedFormalism</IRI>
        <Literal>Logic-based Formalisms</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="http://mpm4cps.eu/ontology/shared#mpm4cps:reference"/>
        <IRI>#Megamodel</IRI>
        <Literal>Regina Hebig, Andreas Seibel, and Holger Giese, On the Uniï¬�cation of Megamodels, 4th International Workshop on. Multi-Paradigm Modeling. (MPM 2010)</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="http://mpm4cps.eu/ontology/shared#mpm4cps:website"/>
        <IRI>#Megamodel</IRI>
        <Literal>https://publishup.uni-potsdam.de/opus4-ubp/frontdoor/index/index/docId/6234</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Megamodel</IRI>
        <Literal>A model that contains models and relations between them.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="http://mpm4cps.eu/ontology/shared#mpm4cps:toDo"/>
        <IRI>#MegamodelFragment</IRI>
        <Literal>Do we add also application and configuration division here?</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#MegamodelFragment</IRI>
        <Literal>The fragment is not a complete megamodel, and can&apos;t be used alone. It can be reused to take part in another megamodel. (e.g. physical part, view of the system, self-adaptation .... etc.)</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Metamodel</IRI>
        <Literal>A metamodel is a model of a model.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#MicroModelElement</IRI>
        <Literal>MicroModelElement represents an  atomic element contained by a MicroModel.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Micromodel</IRI>
        <Literal>Micromodels are usual models and their model elements.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Model</IRI>
        <Literal>A representation of real artifacts regardless of the metamodeling technical space. e.g. xml file, equations...etc.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="http://mpm4cps.eu/ontology/shared#mpm4cps:reference"/>
        <IRI>#ModelRelation</IRI>
        <Literal>&quot;On the Unification of Megamodels&quot; paper.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#ModelRelation</IRI>
        <Literal>A model relation is used to connect an arbitrary number of models.
This connects reference is defined in our ontology by the hasConnectedModels object property. 
The property has the ModelRelation for its domain and the Model class for its range.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#ModelRelation</IRI>
        <Literal>A relation that connects models.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#ModelingDC</IRI>
        <Literal>The ModelingDC subdomain organizes modeling concepts related to core modeling, multi-formalism and model management. It extends several notions introduced in a generic way by the shared ontology such as Language subclassed into ModelingLanguage and Tool subclassed into ModelingTool.

It precises the core notions of Model, ModelRelation, ModelingLanguage, AbstractSyntax, ConcreteSyntax, etc., as well as the core model management notions related to megamodeling such as Megamodel, MegamodelFragment, ModelRelation, etc.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#ModelingParadigm</IRI>
        <Literal>A modeling paradigm is a set of properties characterizing the languages (including their semantics) and workflows (development
processes) employed to develop systems.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#ModelingTool</IRI>
        <Literal>Tools to model the system.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="http://mpm4cps.eu/ontology/shared#mpm4cps:author"/>
        <IRI>#PetriNetBasedFormalism</IRI>
        <Literal>Didier_Buchs</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#PetriNetBasedFormalism</IRI>
        <Literal>Petri nets (also known as a place/transition net or P/T net) are formalisms for the description of distributed systems.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#PetriNetBasedFormalism</IRI>
        <Literal>Petri Net-based Formalisms</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#RefinementRelation</IRI>
        <Literal>Example of a  transformation relation.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#RuntimeTool</IRI>
        <Literal>Runtime Tool</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#SemanticDomain</IRI>
        <Literal>According to Wikipedia, a semantic domain is defined as “a specific place that shares a set of meanings, or a language that holds it”.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#SemanticMappingRelation</IRI>
        <Literal>A semantic mapping relation.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#SimulationTool</IRI>
        <Literal>Simulation Tool</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#SynchronizationRelation</IRI>
        <Literal>Example of a  transformation relation.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#SyntaxMappingRelation</IRI>
        <Literal>Abstract and concrete syntaxes are related via a SyntaxMappingRelation  class that associates element(s) of a concrete syntax to represent element(s) of the abstract syntax.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#TextualSyntax</IRI>
        <Literal>A textual syntax consists of sequences of characters taken from an alphabet and grouped into words or tokens. 
Only some sequences of words or sentences are considered valid and the set of all valid sentences is said to make up the language.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#TimedAutomataBasedFormalism</IRI>
        <Literal>Timed Automata-based Formalisms</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#TraceabilityModel</IRI>
        <Literal>After or while a transformation is being executed, the transformed models often need to be related and a set of traceability relations are created as a by-product of the transformation execution.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#TraceabilityRelation</IRI>
        <Literal>A traceability relation.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#TransformationRelation</IRI>
        <Literal>A Transformation Relation</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#TransformationTool</IRI>
        <Literal>Transformation Tool</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#TranslationalSemantics</IRI>
        <Literal>A translational semantics maybe considered as a  semantic domain with a semantic mapping for a given language.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#VisualizationTool</IRI>
        <Literal>Visualization Tool</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="http://mpm4cps.eu/ontology/shared#mpm4cps:reference"/>
        <IRI>#hasContext</IRI>
        <Literal>Regina Hebig, Andreas Seibel, and Holger Giese, On the Uniï¬�cation of Megamodels, 4th International Workshop on. Multi-Paradigm Modeling. (MPM 2010)</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#hasInput</IRI>
        <Literal>The model need inputs to do perform the determined task.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#hasInputModel</IRI>
        <Literal>It describes the input model for a model relation.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#hasLanguage</IRI>
        <Literal>The model could be expressed in natural language or formal language that is why the range is Language class not the ModelingLanguage class.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#hasLanguage</IRI>
        <Literal>The relation defines the formal language for a formalism. It is an inverse of hasFormalism.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#hasMegamodelFragment</IRI>
        <Literal>It describes the relation between megamodel and its fragments.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="http://mpm4cps.eu/ontology/shared#mpm4cps:reference"/>
        <IRI>#hasModel</IRI>
        <Literal>Regina Hebig, Andreas Seibel, and Holger Giese, On the Uniï¬�cation of Megamodels, 4th International Workshop on. Multi-Paradigm Modeling. (MPM 2010)</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="http://mpm4cps.eu/ontology/shared#mpm4cps:website"/>
        <IRI>#hasModel</IRI>
        <Literal>http://journal.ub.tu-berlin.de/eceasst/article/viewFile/704/713</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#hasModel</IRI>
        <Literal>It describes a recursive relation. e.g. MegaModelFragment hasModel xModel ...</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#hasModelOperation</IRI>
        <Literal>It defines a model operation for a model.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#hasModelRelation</IRI>
        <Literal>It defines a model relation for a model.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="http://mpm4cps.eu/ontology/shared#mpm4cps:toBeReviewed"/>
        <IRI>#hasOutput</IRI>
        <Literal>It is not clear what the result of this relation is.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#hasOutput</IRI>
        <Literal>The model provides results in the following form.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#hasOutputModel</IRI>
        <Literal>It describes the output model for a model relation.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#hasTool</IRI>
        <Literal>The tool that represent the Language. It is an inverse of isToolFor.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#isBasedOnFormalism</IRI>
        <Literal>The relation defines the formalism for a formal language. It is an inverse of hasLanguage.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="http://mpm4cps.eu/ontology/shared#mpm4cps:reference"/>
        <IRI>#isConnecting</IRI>
        <Literal>Regina Hebig, Andreas Seibel, and Holger Giese, On the Uniï¬�cation of Megamodels, 4th International Workshop on. Multi-Paradigm Modeling. (MPM 2010)</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#isConnecting</IRI>
        <Literal>A relation connects a model.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#isExtending</IRI>
        <Literal>This property captures a language extensions. Typically, a language extends another one by adding constructs and possibly refining / overriding some ot the extended language.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="http://mpm4cps.eu/ontology/shared#mpm4cps:toBeReviewed"/>
        <IRI>#isReturningTo</IRI>
        <Literal>The relation is an inverse of hasNext, but only in the integration operation case.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#isToolFor</IRI>
        <Literal>The language that is represented by a tool. It is an inverse of hasTool.</Literal>
    </AnnotationAssertion>
</Ontology>



<!-- Generated by the OWL API (version 4.5.9.2019-02-01T07:24:44Z) https://github.com/owlcs/owlapi -->

